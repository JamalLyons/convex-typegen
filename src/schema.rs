#![allow(non_snake_case)]

// This file was generated by convex-type-generator. Do not edit.
use std::collections::BTreeMap;
use serde_json::Value as JsonValue;

// Type alias for Convex's `any` type - implement as needed
pub type ConvexAny = JsonValue;

#[derive(Debug, Clone)]
pub struct TestTable {
    pub _id: ConvexAny,
    pub _null: Option<()>,
    pub int64: i64,
    pub float64: f64,
    pub boolean: bool,
    pub string: String,
    pub bytes: ConvexAny,
    pub array: Vec<ConvexAny>,
    pub object: BTreeMap<String, ConvexAny>,
    pub record: ConvexAny,
}

#[derive(Debug, Clone)]
pub struct TestQueryArgs {
    pub test: String,
}

#[derive(Debug, Clone)]
pub struct TestQuery22Args {
    pub test: String,
}

#[derive(Debug, Clone)]
pub struct ComplexQueryArgs {
    pub id: String,
    pub filters: Vec<BTreeMap<String, ConvexAny>>,
