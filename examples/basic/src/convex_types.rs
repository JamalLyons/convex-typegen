// This file is generated by convex-typegen. Do not modify directly.
// You can find more information about convex-typegen at https://github.com/JamalLyons/convex-typegen

#![allow(non_camel_case_types)]
#![allow(non_snake_case)]

use serde::{Serialize, Deserialize};

#[derive(Debug, Clone)]
pub struct GamesTable {
    pub win_count: f64,
    pub loss_count: f64,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct GetGameArgs {
}

impl From<GetGameArgs> for std::collections::BTreeMap<String, serde_json::Value> {
    fn from(args: GetGameArgs) -> Self {
        let mut map = std::collections::BTreeMap::new();
        map
    }
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct SaveGameArgs {
    pub win_count: Option<f64>,
    pub loss_count: Option<f64>,
}

impl From<SaveGameArgs> for std::collections::BTreeMap<String, serde_json::Value> {
    fn from(args: SaveGameArgs) -> Self {
        let mut map = std::collections::BTreeMap::new();
        map.insert("win_count".to_string(), serde_json::to_value(args.win_count).unwrap());
        map.insert("loss_count".to_string(), serde_json::to_value(args.loss_count).unwrap());
        map
    }
}

